{
  "components": {
    "form.jsx/widget/": {
      "code": "// STYLED\nconst APP_TITLE = \"SubScript.io\";\n\nconst Box = styled.div`\ndisplay: flex;\nflex-direction: row;\njustify-content: flex-start;\nalign-items: center;\ngap: 0.5em;\n\n\nbutton {\nborder: none;\nbackground: none;\npadding: 0;\nwidth: 1.5em;\nheight: 1.5em;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nborder: 1.5px solid #a8acb3;\ntransition: background 200ms ease-out;\noutline: none!important;\n\n\n&[data-state=\"checked\"] {\nbackground: #a59bdb;\n}\n}\n`;\n\nconst Container = styled.div`\nmin-height: 100vh;\nbackground-color: #1c1f2a;\n`;\n\nconst Heading = styled.h1`\ntext-align: center;\ncolor: #8f73ff;\nfont-weight: 700;\nfont-size: 24pt;\nletter-spacing: 3pt;\ntext-transform: uppercase;\ndisplay: flex;\njustify-content: center;\npadding-top: 10px\n`;\n\nconst MainCard = styled.div`\nborder: 2px solid rgba(255,255,255,.7);\nborder-radius: 25px;\nbackground-color: #1c1f2a;\npadding: 2rem;\nwidth: 32rem\n`;\n\nconst Footer = styled.div`\nposition: relative;\nbottom: 0;\nleft: 0;\nwidth: 100%;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nmargin-top: 20px;\n`;\nconst HorizontalLine = styled.hr`\nwidth: 100%;\nborder: none;\nborder-top: 1px solid #e3e6ec;\nmargin-bottom: 10px;\nmargin-top: 50px;\n`;\nconst FooterText = styled.p`\nfont-size: 14px;\ncolor: #e3e6ec;\n`;\n\n// CHECK FOR SEPOLIA NETWORK\nif (\n  state.chainId === undefined &&\n  ethers !== undefined &&\n  Ethers.send(\"eth_requestAccounts\", [])[0]\n) {\n  Ethers.provider()\n    .getNetwork()\n    .then((chainIdData) => {\n      if (chainIdData?.chainId) {\n        State.update({ chainId: chainIdData.chainId });\n      }\n    });\n}\nif (state.chainId !== undefined && state.chainId !== 11155111) {\n  return <p>Switch to Sepolia</p>;\n}\n\nconst Navbar = (\n  <div class=\"navbar navbar-dark navbar-expand-lg bg-dark px-3\">\n    <a\n      class=\"navbar-brand text-white\"\n      style={{ fontWeight: 700, textTransform: \"uppercase\" }}\n    >\n      <img\n        src=\"https://getbootstrap.com//docs/4.4/assets/brand/bootstrap-solid.svg\"\n        width=\"30\"\n        height=\"30\"\n        class=\"d-inline-block align-top\"\n        alt=\"\"\n      />\n      {APP_TITLE}\n    </a>\n    <button\n      class=\"navbar-toggler\"\n      type=\"button\"\n      data-toggle=\"collapse\"\n      data-target=\"#navbarSupportedContent\"\n      aria-controls=\"navbarSupportedContent\"\n      aria-expanded=\"false\"\n      aria-label=\"Toggle navigation\"\n    >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item active\">\n          <a\n            class=\"nav-link text-light text-capitalize\"\n            style={{ fontWeight: 700 }}\n            href=\"#\"\n          >\n            Create\n          </a>\n        </li>\n        <li class=\"nav-item\">\n          <a\n            class=\"nav-link text-light text-capitalize\"\n            style={{ fontWeight: 700 }}\n            href=\"#\"\n          >\n            My Subscriptions\n          </a>\n        </li>\n        <li class=\"nav-item\">\n          <a\n            class=\"nav-link disabled\"\n            style={{ fontWeight: 700 }}\n            href=\"#\"\n            tabindex=\"-1\"\n            aria-disabled=\"true\"\n          >\n            Analytics (soon)\n          </a>\n        </li>\n      </ul>\n    </div>\n    <div class=\"d-flex justify-content-between\">\n      {state.balance && <a class=\"nav-link text-white\">{state.balance} Îž</a>}\n      <Web3Connect connectLabel=\"Connect with Web3\" />\n    </div>\n  </div>\n);\n\n// CHECK FOR WALLET CONNECTION\nif (state.sender === undefined) {\n  const accounts = Ethers.send(\"eth_requestAccounts\", []);\n  if (accounts.length) {\n    State.update({ sender: accounts[0] });\n    console.log(\"set sender\", accounts[0]);\n  }\n}\n\n// FETCH SENDER BALANCE\nif (state.balance === undefined && state.sender) {\n  Ethers.provider()\n    .getBalance(state.sender)\n    .then((balance) => {\n      State.update({ balance: Big(balance).div(Big(10).pow(18)).toFixed(2) });\n    });\n}\n\n// CONTRACT INSTANCE\nif (state.sender) {\n  const contractAddress = \"0x1A1F1D20C404D9C2399a56166256d25fe3e2A93D\";\n  const factoryABI = fetch(\n    \"https://raw.githubusercontent.com/knwtechs/NFT-subscriptions-contracts/main/artifacts/contracts/SubscriptionsFactory.sol/SubscriptionsFactory.json\"\n  );\n  if (!factoryABI.ok) {\n    return \"Contract unavailable.\";\n  }\n  const subscriptionsFactoryContract = new ethers.Contract(\n    contractAddress,\n    JSON.parse(factoryABI.body)[\"abi\"],\n    Ethers.provider().getSigner()\n  );\n}\n\n// INIT STATE\nState.init({\n  product_name,\n  timeframe,\n  uri,\n  startTimestamp,\n  price: 0,\n  usdPrice: 0,\n  supply: -1,\n  cap_supply: false,\n});\n\nif (!state.supply) {\n  State.update({ supply: -1 });\n}\n\nif (!state.cap_supply) {\n  State.update({ cap_supply: false });\n}\n\n// PRODUCT NAME\nconst onNameChange = ({ target }) => {\n  State.update({ product_name: target.value });\n};\nconst validateName = () => {\n  return state.product_name.length > 0;\n};\n\n// TIMEFRAME\nconst onTimeframeChange = ({ target }) => {\n  State.update({ timeframe: target.value });\n};\nconst validateTimeframe = () => {\n  return state.timeframe >= 1;\n};\n\n// URI\nconst onUriChange = ({ target }) => {\n  State.update({ uri: target.value });\n};\nconst validateUri = () => {\n  return state.uri.length > 0;\n};\n\n// START TIMESTAMP\nconst onStartTimestampChange = ({ target }) => {\n  console.log(target.value);\n  State.update({ startTimestamp: target.value });\n};\nconst validateStartTimestamp = () => {\n  const timestamp = new Date(state.startTimestamp).getTime();\n  return timestamp >= 0;\n};\n\n// PRICE\nconst onPriceChange = ({ target }) => {\n  State.update({\n    price: target.value,\n    usdPrice: (target.value * state.ethusd).toFixed(2),\n  });\n};\nconst validatePrice = () => {\n  return state.price > 0;\n};\n\n// SUPPLY\nconst onCheckboxChange = (checked) => {\n  State.update({ cap_supply: checked, supply: checked ? 5000 : -1 });\n};\nconst onSupplyChange = ({ target }) => {\n  State.update({ supply: target.value });\n};\nconst validateSupply = () => {\n  return state.supply >= -1;\n};\n\nconst isFormValid = () => {\n  console.log(\"name: \", state.product_name);\n  console.log(\"price: \", state.price);\n  console.log(\"timeframe: \", state.timeframe);\n  console.log(\"uri: \", state.uri);\n  console.log(\"cap_supply: \", state.cap_supply);\n  console.log(\"supply: \", state.supply);\n  console.log(\"sender: \", state.sender);\n\n  return (\n    (state.product_name.length > 0 &&\n      state.price > 0 &&\n      state.timeframe > 0 &&\n      state.uri.length > 0 &&\n      state.sender.length > 0 &&\n      state.cap_supply &&\n      state.supply >= -1) ||\n    (!state.cap_supply && state.supply == -1)\n  );\n};\n\n// CONTRACT INTERACTION\nconst createCollection = async () => {\n  if (isFormValid()) {\n    console.log(\"form valid, performing contract call: \");\n    const amount = Big(state.price).mul(Big(10).pow(18)).toString();\n    const start = Big(\n      Math.floor(new Date(dateTimeString).getTime() / 1000)\n    ).toString();\n    console.log(\"Amount: \", amount);\n\n    subscriptionsFactoryContract\n      .createCollection(\n        state.product_name,\n        [amount],\n        [`${state.supply}`],\n        Big(state.timeframe * 86400).toString(),\n        state.sender,\n        state.uri,\n        start\n      )\n      .sendTransaction()\n      .then((transactionHash) => {\n        console.log(\"transactionHash is \" + transactionHash);\n      })\n      .catch(function (err) {\n        console.log(err);\n      });\n  } else {\n    console.log(\"form not ready\");\n  }\n};\n\n// ETH/USD PRICE\nconst cg_ethusd = fetch(\n  \"https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd\"\n).body;\nif (!cg_ethusd) return \"\";\nif (!state.ethusd) {\n  State.update({ ethusd: cg_ethusd[\"ethereum\"][\"usd\"] });\n}\n\nconst css = fetch(\n  \"https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css\"\n).body;\nif (!css) return \"\";\n\nif (!state.theme) {\n  State.update({\n    theme: styled.div`\n${css}\n`,\n  });\n}\nconst Theme = state.theme;\n\nreturn (\n  <Theme>\n    {/* Navbar */}\n    {Navbar}\n    <Container>\n      <div class=\"row d-flex justify-content-center w-100\">\n        <Heading class=\"my-5\">{APP_TITLE}</Heading>\n        <p class=\"text-light text-center font-italic\">\n          Handling subscriptions with ERC-1155 it&apos;s never been that easy.\n        </p>\n      </div>\n      <div class=\"row d-flex justify-content-center\">\n        <MainCard onSubmit={handleSubmit}>\n          <div class=\"row d-flex justify-content-center\">\n            <div class=\"col\">\n              <h2 class=\"text-white text-center\">Create a new product</h2>\n            </div>\n          </div>\n          {/* PRODUCT NAME */}\n          <div class=\"row d-flex justify-content-center\">\n            <div class=\"col-12\">\n              <div class=\"form-group\">\n                <label for=\"product_name\" class=\"text-white\">\n                  Product Name\n                </label>\n                <input\n                  type=\"text\"\n                  value={state.product_name}\n                  onChange={onNameChange}\n                  class=\"form-control\"\n                  id=\"product_name\"\n                  placeholder=\"Netflix\"\n                  active={\n                    !state.product_name\n                      ? \"blank\"\n                      : validateName()\n                      ? \"valid\"\n                      : \"invalid\"\n                  }\n                />\n              </div>\n            </div>\n          </div>\n          {/* PRODUCT PRICE + TIMEFRAME */}\n          <div class=\"row d-flex justify-content-center\">\n            <div class=\"col-6\">\n              <div class=\"form-group\">\n                <label for=\"price\" class=\"text-white\">\n                  Recurrent price\n                </label>\n\n                <div class=\"input-group mb-3\">\n                  <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\" id=\"basic-addon1\">\n                      Îž\n                    </span>\n                  </div>\n                  <input\n                    type=\"number\"\n                    class=\"form-control\"\n                    value={state.price}\n                    onChange={onPriceChange}\n                    id=\"price\"\n                    placeholder=\"0.011\"\n                    active={\n                      !state.price\n                        ? \"blank\"\n                        : validatePrice()\n                        ? \"valid\"\n                        : \"invalid\"\n                    }\n                  />\n                  <div class=\"input-group-append\">\n                    <span class=\"input-group-text\">{state.usdPrice} $</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-6\">\n              <div class=\"form-group\">\n                <label for=\"timeframe\" class=\"text-white\">\n                  Billing period\n                </label>\n                <div class=\"input-group mb-3\">\n                  <input\n                    type=\"number\"\n                    class=\"form-control\"\n                    value={state.timeframe}\n                    onChange={onTimeframeChange}\n                    step={1}\n                    id=\"timeframe\"\n                    placeholder=\"30\"\n                    active={\n                      !state.price\n                        ? \"blank\"\n                        : validateTimeframe()\n                        ? \"valid\"\n                        : \"invalid\"\n                    }\n                  />\n                  <div class=\"input-group-append\">\n                    <span class=\"input-group-text\" id=\"basic-addon1\">\n                      Days\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* URI */}\n          <div class=\"row d-flex justify-content-center\">\n            <div class=\"col-12\">\n              <div class=\"form-group\">\n                <label for=\"uri\" class=\"text-white\">\n                  Metadata URI\n                </label>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  value={state.uri}\n                  onChange={onUriChange}\n                  id=\"uri\"\n                  name=\"uri\"\n                  placeholder=\"https://cloudflare-ipfs.com/ipfs/QmXoypizjW3WknFiJnKLwHCnL72vedxjQkDDP1mXWo6uco/w\"\n                  active={\n                    !state.uri ? \"blank\" : validateUri() ? \"valid\" : \"invalid\"\n                  }\n                />\n              </div>\n            </div>\n          </div>\n          {/* START TIMESTAMP */}\n          <div class=\"row d-flex justify-content-center\">\n            <div class=\"col-12\">\n              <div class=\"form-group\">\n                <label for=\"startTimestamp\" class=\"text-white\">\n                  Mint starts at\n                </label>\n                <input\n                  type=\"datetime-local\"\n                  class=\"form-control\"\n                  value={state.startTimestamp}\n                  onChange={onStartTimestampChange}\n                  id=\"startTimestamp\"\n                  active={\n                    !state.startTimestamp\n                      ? \"blank\"\n                      : validateStartTimestamp()\n                      ? \"valid\"\n                      : \"invalid\"\n                  }\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* SUPPLY CHECKBOX */}\n          <div class=\"row d-flex justify-content-center\">\n            <div class=\"col-12\">\n              <div class=\"form-check px-0\">\n                <Box>\n                  <Checkbox.Root\n                    checked={state.cap_supply}\n                    onCheckedChange={onCheckboxChange}\n                    id={\"cap_supply_checkbox\"}\n                  >\n                    <Checkbox.Indicator>\n                      <svg\n                        width=\"20\"\n                        height=\"20\"\n                        viewBox=\"0 0 15 15\"\n                        fill=\"none\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                      >\n                        <path\n                          d=\"M11.4669 3.72684C11.7558 3.91574 11.8369 4.30308 11.648 4.59198L7.39799 11.092C7.29783 11.2452 7.13556 11.3467 6.95402 11.3699C6.77247 11.3931 6.58989 11.3355 6.45446 11.2124L3.70446 8.71241C3.44905 8.48022 3.43023 8.08494 3.66242 7.82953C3.89461 7.57412 4.28989 7.55529 4.5453 7.78749L6.75292 9.79441L10.6018 3.90792C10.7907 3.61902 11.178 3.53795 11.4669 3.72684Z\"\n                          fill=\"currentColor\"\n                          fill-rule=\"evenodd\"\n                          clip-rule=\"evenodd\"\n                        ></path>\n                      </svg>\n                    </Checkbox.Indicator>\n                  </Checkbox.Root>\n                  <span htmlFor={\"cap_supply_checkbox\"} class=\"text-white\">\n                    I want to cap the token supply\n                  </span>\n                </Box>\n              </div>\n            </div>\n          </div>\n\n          {/* MAX SUPPLY */}\n          {state.cap_supply && (\n            <div class=\"row d-flex justify-content-center mt-2\">\n              <div class=\"col-12\">\n                <div class=\"form-group\">\n                  <input\n                    type=\"number\"\n                    value={state.supply}\n                    onChange={onSupplyChange}\n                    class=\"form-control\"\n                    id=\"supply\"\n                    placeholder=\"5000\"\n                    active={\n                      !state.supply\n                        ? \"blank\"\n                        : validateSupply()\n                        ? \"valid\"\n                        : \"invalid\"\n                    }\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* SUBMIT */}\n          <div class=\"row d-flex justify-content-center mt-2\">\n            <div class=\"col-12 text-center\">\n              {state.sender ? (\n                <button\n                  class=\"btn btn-secondary btn-block\"\n                  style={{ fontWeight: 500 }}\n                  type=\"submit\"\n                  onClick={createCollection}\n                  disabled={!isFormValid}\n                >\n                  Create Product\n                </button>\n              ) : (\n                <Web3Connect connectLabel=\"Connect with Web3\" />\n              )}\n            </div>\n          </div>\n        </MainCard>\n      </div>\n      <Footer>\n        <HorizontalLine />\n        <FooterText>Made with &#x2665; by KNW Technologies FZCO</FooterText>\n      </Footer>\n    </Container>\n  </Theme>\n);"
    },
    "subscriptionButton.jsx/widget/": {
      "code": "// PROPS\nconst tier = Big(props.tier ?? 0).toString();\nconst style = props.style ?? { backgroundColor: \"blue\" };\nconst contractAddress =\n  props.collectionAddress ?? \"0x4011a9da226c3ff36cedcf0fb3a3bd420cc974d0\";\n\n// CHECK FOR WALLET CONNECTION\nif (state.sender === undefined) {\n  const accounts = Ethers.send(\"eth_requestAccounts\", []);\n  if (accounts.length) {\n    State.update({ sender: accounts[0] });\n  }\n}\n\n// CONTRACT INSTANCE\n//if (state.sender) {\nconst collectionABI = fetch(\n  \"https://raw.githubusercontent.com/knwtechs/subscript.io-contracts/main/artifacts/contracts/SubscriptionsCollection.sol/SubscriptionsCollection.json\"\n);\nif (!collectionABI.ok) {\n  return \"Contract unavailable.\";\n}\nconst subscriptionsCollectionContract = new ethers.Contract(\n  contractAddress,\n  JSON.parse(collectionABI.body)[\"abi\"],\n  Ethers.provider().getSigner()\n);\nsubscriptionsCollectionContract\n  .getTierPrice(tier)\n  .then((price) => State.update({ price: price.toString() }));\n//}\n\nconst subscribe = () => {\n  console.log(\"To: \", state.sender);\n  console.log(\"Tier: \", tier);\n  console.log(\"Price: \", state.price);\n  try {\n    subscriptionsCollectionContract\n      .mint(state.sender, tier, { value: state.price })\n      //.sendTransaction()\n      .catch((err) => console.log(err))\n      .then((tx) => {\n        console.log(\"Waiting for confirmation: \", tx);\n        tx.wait().then(() => console.log(\"TX Confirmed\"));\n      });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nreturn (\n  <>\n    <Web3Connect connectLabel=\"Connect with Web3\" />\n\n    <button\n      style={style}\n      onClick={subscribe}\n      id={props.id ?? \"subscribeButton\"}\n    >\n      Subscribe\n    </button>\n  </>\n);\n"
    },
    "final.jsx/widget/": {
      "code": "// STYLED\nconst APP_TITLE = \"SubScript.io\";\n\nconst Box = styled.div`\ndisplay: flex;\nflex-direction: row;\njustify-content: flex-start;\nalign-items: center;\ngap: 0.5em;\n\n\nbutton {\nborder: none;\nbackground: none;\npadding: 0;\nwidth: 1.5em;\nheight: 1.5em;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nborder: 1.5px solid #a8acb3;\ntransition: background 200ms ease-out;\noutline: none!important;\n\n\n&[data-state=\"checked\"] {\nbackground: #a59bdb;\n}\n}\n`;\n\nconst Container = styled.div`\nmin-height: 100vh;\nbackground-color: #1c1f2a;\n`;\n\nconst Heading = styled.h1`\ntext-align: center;\ncolor: #8f73ff;\nfont-weight: 700;\nfont-size: 24pt;\nletter-spacing: 3pt;\ntext-transform: uppercase;\ndisplay: flex;\njustify-content: center;\npadding-top: 10px\n`;\n\nconst MainCard = styled.div`\nborder: 2px solid rgba(255,255,255,.7);\nborder-radius: 25px;\nbackground-color: #1c1f2a;\npadding: 2rem;\nwidth: 32rem\n`;\n\nconst Footer = styled.div`\nposition: relative;\nbottom: 0;\nleft: 0;\nwidth: 100%;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nmargin-top: 20px;\n`;\nconst HorizontalLine = styled.hr`\nwidth: 100%;\nborder: none;\nborder-top: 1px solid #e3e6ec;\nmargin-bottom: 10px;\nmargin-top: 50px;\n`;\nconst FooterText = styled.p`\nfont-size: 14px;\ncolor: #e3e6ec;\n`;\n\n// CHECK FOR SEPOLIA NETWORK\nif (\n  state.chainId === undefined &&\n  ethers !== undefined &&\n  Ethers.send(\"eth_requestAccounts\", [])[0]\n) {\n  Ethers.provider()\n    .getNetwork()\n    .then((chainIdData) => {\n      if (chainIdData?.chainId) {\n        State.update({ chainId: chainIdData.chainId });\n      }\n    });\n}\nif (state.chainId !== undefined && state.chainId !== 11155111) {\n  return <p>Switch to Sepolia</p>;\n}\n\nconst Navbar = (\n  <div class=\"navbar navbar-dark navbar-expand-lg bg-dark px-3\">\n    <a\n      class=\"navbar-brand text-white\"\n      style={{ fontWeight: 700, textTransform: \"uppercase\" }}\n    >\n      <img\n        src=\"https://getbootstrap.com//docs/4.4/assets/brand/bootstrap-solid.svg\"\n        width=\"30\"\n        height=\"30\"\n        class=\"d-inline-block align-top\"\n        alt=\"\"\n      />\n      {APP_TITLE}\n    </a>\n    <button\n      class=\"navbar-toggler\"\n      type=\"button\"\n      data-toggle=\"collapse\"\n      data-target=\"#navbarSupportedContent\"\n      aria-controls=\"navbarSupportedContent\"\n      aria-expanded=\"false\"\n      aria-label=\"Toggle navigation\"\n    >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item active\">\n          <a\n            class=\"nav-link text-light text-capitalize\"\n            style={{ fontWeight: 700 }}\n            href=\"#\"\n          >\n            Create\n          </a>\n        </li>\n        <li class=\"nav-item\">\n          <a\n            class=\"nav-link text-light text-capitalize\"\n            style={{ fontWeight: 700 }}\n            href=\"#\"\n          >\n            My Subscriptions\n          </a>\n        </li>\n        <li class=\"nav-item\">\n          <a\n            class=\"nav-link disabled\"\n            style={{ fontWeight: 700 }}\n            href=\"#\"\n            tabindex=\"-1\"\n            aria-disabled=\"true\"\n          >\n            Analytics (soon)\n          </a>\n        </li>\n      </ul>\n    </div>\n    <div class=\"d-flex justify-content-between\">\n      {state.balance && <a class=\"nav-link text-white\">{state.balance} Îž</a>}\n      <Web3Connect connectLabel=\"Connect with Web3\" />\n    </div>\n  </div>\n);\n\n// CHECK FOR WALLET CONNECTION\nif (state.sender === undefined) {\n  const accounts = Ethers.send(\"eth_requestAccounts\", []);\n  if (accounts.length) {\n    State.update({ sender: accounts[0] });\n    console.log(\"set sender\", accounts[0]);\n  }\n}\n\n// FETCH SENDER BALANCE\nif (state.balance === undefined && state.sender) {\n  Ethers.provider()\n    .getBalance(state.sender)\n    .then((balance) => {\n      State.update({ balance: Big(balance).div(Big(10).pow(18)).toFixed(2) });\n    });\n}\n\n// CONTRACT INSTANCE\nconst contractAddress = \"0x1A1F1D20C404D9C2399a56166256d25fe3e2A93D\";\nconst factoryABI = fetch(\n  \"https://raw.githubusercontent.com/knwtechs/subscript.io-contracts/main/artifacts/contracts/SubscriptionsFactory.sol/SubscriptionsFactory.json\"\n);\nif (!factoryABI.ok) {\n  return \"Contract unavailable.\";\n}\nconst subscriptionsFactoryContract = new ethers.Contract(\n  contractAddress,\n  JSON.parse(factoryABI.body)[\"abi\"],\n  Ethers.provider().getSigner()\n);\n\n// INIT STATE\nState.init({\n  product_name,\n  timeframe,\n  uri,\n  startTimestamp,\n  price: 0,\n  usdPrice: 0,\n  supply: -1,\n  cap_supply: false,\n});\n\nif (!state.supply) {\n  State.update({ supply: -1 });\n}\n\nif (!state.cap_supply) {\n  State.update({ cap_supply: false });\n}\n\n// PRODUCT NAME\nconst onNameChange = ({ target }) => {\n  State.update({ product_name: target.value });\n};\nconst validateName = () => {\n  return state.product_name.length > 0;\n};\n\n// TIMEFRAME\nconst onTimeframeChange = ({ target }) => {\n  State.update({ timeframe: target.value });\n};\nconst validateTimeframe = () => {\n  return state.timeframe >= 1;\n};\n\n// URI\nconst onUriChange = ({ target }) => {\n  State.update({ uri: target.value });\n};\nconst validateUri = () => {\n  return state.uri.length > 0;\n};\n\n// START TIMESTAMP\nconst onStartTimestampChange = ({ target }) => {\n  console.log(target.value);\n  State.update({ startTimestamp: target.value });\n};\nconst validateStartTimestamp = () => {\n  const timestamp = new Date(state.startTimestamp).getTime();\n  return timestamp >= 0;\n};\n\n// PRICE\nconst onPriceChange = ({ target }) => {\n  State.update({\n    price: target.value,\n    usdPrice: (target.value * state.ethusd).toFixed(2),\n  });\n};\nconst validatePrice = () => {\n  return state.price > 0;\n};\n\n// SUPPLY\nconst onCheckboxChange = (checked) => {\n  State.update({ cap_supply: checked, supply: checked ? 5000 : -1 });\n};\nconst onSupplyChange = ({ target }) => {\n  State.update({ supply: target.value });\n};\nconst validateSupply = () => {\n  return state.supply >= -1;\n};\n\nconst isFormValid = () => {\n  console.log(\"name: \", state.product_name);\n  console.log(\"price: \", state.price);\n  console.log(\"timeframe: \", state.timeframe);\n  console.log(\"uri: \", state.uri);\n  console.log(\"cap_supply: \", state.cap_supply);\n  console.log(\"supply: \", state.supply);\n  console.log(\"sender: \", state.sender);\n\n  return (\n    (state.product_name.length > 0 &&\n      state.price > 0 &&\n      state.timeframe > 0 &&\n      state.uri.length > 0 &&\n      state.sender.length > 0 &&\n      state.cap_supply &&\n      state.supply >= -1) ||\n    (!state.cap_supply && state.supply == -1)\n  );\n};\n\n// CONTRACT INTERACTION\nconst createCollection = async () => {\n  if (isFormValid()) {\n    console.log(\"form valid, performing contract call.\");\n    const amount = Big(state.price).mul(Big(10).pow(18)).toString();\n    const start = Big(\n      Math.floor(new Date(state.startTimestamp).getTime() / 1000)\n    ).toString();\n    const frame = Big(state.timeframe).mul(86400).toString();\n    console.log(\"Amount: \", amount);\n    console.log(\"Start: \", start);\n    console.log(\"Frame: \", frame);\n\n    subscriptionsFactoryContract\n      .createCollection(\n        state.product_name,\n        [amount],\n        [Big(state.supply).toString()],\n        frame,\n        state.sender,\n        state.uri,\n        start\n      )\n      .sendTransaction()\n      .then((transactionHash) => {\n        console.log(\"transactionHash is \" + transactionHash);\n      })\n      .catch(function (err) {\n        console.log(err);\n      });\n  } else {\n    console.log(\"form not ready\");\n  }\n};\n\n// ETH/USD PRICE\nconst cg_ethusd = fetch(\n  \"https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd\"\n).body;\nif (!cg_ethusd) return \"\";\nif (!state.ethusd) {\n  State.update({ ethusd: cg_ethusd[\"ethereum\"][\"usd\"] });\n}\n\nconst css = fetch(\n  \"https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css\"\n).body;\nif (!css) return \"\";\n\nif (!state.theme) {\n  State.update({\n    theme: styled.div`\n${css}\n`,\n  });\n}\nconst Theme = state.theme;\n\nreturn (\n  <Theme>\n    {/* Navbar */}\n    {Navbar}\n    <Container>\n      <div class=\"row d-flex justify-content-center w-100\">\n        <Heading class=\"my-5\">{APP_TITLE}</Heading>\n        <p class=\"text-light text-center font-italic\">\n          Handling subscriptions with ERC-1155 it&apos;s never been that easy.\n        </p>\n      </div>\n      <div class=\"row d-flex justify-content-center\">\n        <MainCard onSubmit={handleSubmit}>\n          <div class=\"row d-flex justify-content-center\">\n            <div class=\"col\">\n              <h2 class=\"text-white text-center\">Create a new product</h2>\n            </div>\n          </div>\n          {/* PRODUCT NAME */}\n          <div class=\"row d-flex justify-content-center\">\n            <div class=\"col-12\">\n              <div class=\"form-group\">\n                <label for=\"product_name\" class=\"text-white\">\n                  Product Name\n                </label>\n                <input\n                  type=\"text\"\n                  value={state.product_name}\n                  onChange={onNameChange}\n                  class=\"form-control\"\n                  id=\"product_name\"\n                  placeholder=\"Netflix\"\n                  active={\n                    !state.product_name\n                      ? \"blank\"\n                      : validateName()\n                      ? \"valid\"\n                      : \"invalid\"\n                  }\n                />\n              </div>\n            </div>\n          </div>\n          {/* PRODUCT PRICE + TIMEFRAME */}\n          <div class=\"row d-flex justify-content-center\">\n            <div class=\"col-6\">\n              <div class=\"form-group\">\n                <label for=\"price\" class=\"text-white\">\n                  Recurrent price\n                </label>\n\n                <div class=\"input-group mb-3\">\n                  <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\" id=\"basic-addon1\">\n                      Îž\n                    </span>\n                  </div>\n                  <input\n                    type=\"number\"\n                    class=\"form-control\"\n                    value={state.price}\n                    onChange={onPriceChange}\n                    id=\"price\"\n                    placeholder=\"0.011\"\n                    active={\n                      !state.price\n                        ? \"blank\"\n                        : validatePrice()\n                        ? \"valid\"\n                        : \"invalid\"\n                    }\n                  />\n                  <div class=\"input-group-append\">\n                    <span class=\"input-group-text\">{state.usdPrice} $</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-6\">\n              <div class=\"form-group\">\n                <label for=\"timeframe\" class=\"text-white\">\n                  Billing period\n                </label>\n                <div class=\"input-group mb-3\">\n                  <input\n                    type=\"number\"\n                    class=\"form-control\"\n                    value={state.timeframe}\n                    onChange={onTimeframeChange}\n                    step={1}\n                    id=\"timeframe\"\n                    placeholder=\"30\"\n                    active={\n                      !state.price\n                        ? \"blank\"\n                        : validateTimeframe()\n                        ? \"valid\"\n                        : \"invalid\"\n                    }\n                  />\n                  <div class=\"input-group-append\">\n                    <span class=\"input-group-text\" id=\"basic-addon1\">\n                      Days\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* URI */}\n          <div class=\"row d-flex justify-content-center\">\n            <div class=\"col-12\">\n              <div class=\"form-group\">\n                <label for=\"uri\" class=\"text-white\">\n                  Metadata URI\n                </label>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  value={state.uri}\n                  onChange={onUriChange}\n                  id=\"uri\"\n                  name=\"uri\"\n                  placeholder=\"https://cloudflare-ipfs.com/ipfs/QmXoypizjW3WknFiJnKLwHCnL72vedxjQkDDP1mXWo6uco/w\"\n                  active={\n                    !state.uri ? \"blank\" : validateUri() ? \"valid\" : \"invalid\"\n                  }\n                />\n              </div>\n            </div>\n          </div>\n          {/* START TIMESTAMP */}\n          <div class=\"row d-flex justify-content-center\">\n            <div class=\"col-12\">\n              <div class=\"form-group\">\n                <label for=\"startTimestamp\" class=\"text-white\">\n                  Mint starts at\n                </label>\n                <input\n                  type=\"datetime-local\"\n                  class=\"form-control\"\n                  value={state.startTimestamp}\n                  onChange={onStartTimestampChange}\n                  id=\"startTimestamp\"\n                  active={\n                    !state.startTimestamp\n                      ? \"blank\"\n                      : validateStartTimestamp()\n                      ? \"valid\"\n                      : \"invalid\"\n                  }\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* SUPPLY CHECKBOX */}\n          <div class=\"row d-flex justify-content-center\">\n            <div class=\"col-12\">\n              <div class=\"form-check px-0\">\n                <Box>\n                  <Checkbox.Root\n                    checked={state.cap_supply}\n                    onCheckedChange={onCheckboxChange}\n                    id={\"cap_supply_checkbox\"}\n                  >\n                    <Checkbox.Indicator>\n                      <svg\n                        width=\"20\"\n                        height=\"20\"\n                        viewBox=\"0 0 15 15\"\n                        fill=\"none\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                      >\n                        <path\n                          d=\"M11.4669 3.72684C11.7558 3.91574 11.8369 4.30308 11.648 4.59198L7.39799 11.092C7.29783 11.2452 7.13556 11.3467 6.95402 11.3699C6.77247 11.3931 6.58989 11.3355 6.45446 11.2124L3.70446 8.71241C3.44905 8.48022 3.43023 8.08494 3.66242 7.82953C3.89461 7.57412 4.28989 7.55529 4.5453 7.78749L6.75292 9.79441L10.6018 3.90792C10.7907 3.61902 11.178 3.53795 11.4669 3.72684Z\"\n                          fill=\"currentColor\"\n                          fill-rule=\"evenodd\"\n                          clip-rule=\"evenodd\"\n                        ></path>\n                      </svg>\n                    </Checkbox.Indicator>\n                  </Checkbox.Root>\n                  <span htmlFor={\"cap_supply_checkbox\"} class=\"text-white\">\n                    I want to cap the token supply\n                  </span>\n                </Box>\n              </div>\n            </div>\n          </div>\n\n          {/* MAX SUPPLY */}\n          {state.cap_supply && (\n            <div class=\"row d-flex justify-content-center mt-2\">\n              <div class=\"col-12\">\n                <div class=\"form-group\">\n                  <input\n                    type=\"number\"\n                    value={state.supply}\n                    onChange={onSupplyChange}\n                    class=\"form-control\"\n                    id=\"supply\"\n                    placeholder=\"5000\"\n                    active={\n                      !state.supply\n                        ? \"blank\"\n                        : validateSupply()\n                        ? \"valid\"\n                        : \"invalid\"\n                    }\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* SUBMIT */}\n          <div class=\"row d-flex justify-content-center mt-2\">\n            <div class=\"col-12 text-center\">\n              {state.sender ? (\n                <button\n                  class=\"btn btn-secondary btn-block\"\n                  style={{ fontWeight: 500 }}\n                  type=\"submit\"\n                  onClick={createCollection}\n                  disabled={!isFormValid}\n                >\n                  Create Product\n                </button>\n              ) : (\n                <Web3Connect connectLabel=\"Connect with Web3\" />\n              )}\n            </div>\n          </div>\n        </MainCard>\n      </div>\n      <Footer>\n        <HorizontalLine />\n        <FooterText>Made with &#x2665; by KNW Technologies FZCO</FooterText>\n      </Footer>\n    </Container>\n  </Theme>\n);\n"
    }
  }
}